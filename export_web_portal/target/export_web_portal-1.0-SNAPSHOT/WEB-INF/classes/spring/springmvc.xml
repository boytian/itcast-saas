<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd">


    <!--springmvc配置 -->
    <context:component-scan base-package="cn.itcast.controller"></context:component-scan>
    <mvc:annotation-driven></mvc:annotation-driven>

    <!--dubbo消费者配置 -->
    <dubbo:application name="export_web_portal"></dubbo:application>
    <dubbo:registry address="zookeeper://localhost:2181"></dubbo:registry>
    <dubbo:annotation package="cn.itcast.controller"></dubbo:annotation>

    <!--在消费者的整合配置文件中-->
    <!--
        如果springmvc和dubbo消费者配合一起使用：
            1.在web.xml中开启dispatcherServlet的初始化加载
                 <load-on-startup>1</load-on-startup>
            2.为了方式开发阶段可能出现的dubbo服务紊乱问题
                默认消费者这工程启动的时候，自动监控服务提供者，如果提供者没有启动。消费者抛出异常，终止启动
                check="false" : 启动的时候不检查提供者，在调用的时候检查提供者

    -->
    <dubbo:consumer check="false"></dubbo:consumer>

</beans>